tr data-depth=node.depth data-parent=(node.parent ? node.parent.id : :root)
  = hidden_field_tag 'node[id]', node.id
  td
    - if tree
      = fa_icon node.console_caret_icon, \
                class: 'mr-2', \
                style: "margin-left:#{node.depth * 2}rem"
    = link_to node.title, edit_console_node_path(node.id)
    - unless tree
      li.small == node_breadcrumbs(node.ancestors)
  td
    - if sortable
      - if !limited
        = hidden_field_tag 'node[id]', node.id
        = hidden_field_tag 'node[position]', node.position
        .btn-group role="group" style="margin-left:#{node.depth * 2}rem"
          .btn.btn-sm.btn-outline-secondary.node.position-up
            = fa_icon 'arrow-up'
          .btn.btn-sm.btn-outline-secondary.node.position-down
            = fa_icon 'arrow-down'
      - else
        = link_to console_nodes_path(by_parent: node.parent.id), \
                  class: 'btn btn-sm btn-outline-secondary node position-up', \
                  role: 'button' do
          = fa_icon 'arrow-up', class: 'mr-1'
          = fa_icon 'arrow-down'
  td
    == cell('folio/console/nodes/translations', node, hide_original: true)

  td = node.model_name.human
  td
    = form_with(model: node, \
                scope: :node, \
                url: console_node_path(node.id, format: :json), \
                class: 'featured') do |f|
      = f.hidden_field :featured, value: !node.featured, \
                                  data: { attribute: 'featured'}
      = featured_button(node.featured)
  / td = node.ancestry
  td
    = form_with(model: node, scope: :node, \
                             url: console_node_path(node.id, format: :json), \
                             class: 'published') do |f|
      = f.hidden_field :published, value: !node.published, \
                                   data: { attribute: 'published'}
      = published_button(node.published)
  td
    - if node.published_at.present?
      = l(node.published_at, format: :short)

  td
    - if node.kind_of? Folio::Category
      = new_child_node_button(node)

    = edit_button node, edit_console_node_path(node.id)
    = delete_button node, console_node_path(node.id)

- if tree
  = render partial: "nodes_table", locals: { nodes: children }
