.nested-fields.f-c-atom-form-fields.folio-console--compact[
  data-placeholders=(ERB::Util.html_escape placeholders)
  data-structures=(ERB::Util.html_escape structures)
]
  .card
    .card-body
      = f.input :type, collection: atom_types_for_select, \
                       selected: f.object.type || default_atom_type, \
                       include_blank: false, \
                       input_html: { class: 'folio-console-atom-type-select' }

      .folio-console-smart-row.folio-console-smart-row--wrap
        aside.folio-console-smart-col[
          class="folio-console-atom-fields"
          class="folio-console-atom-fields--cover"
          hidden=(structure[:cover] ? nil : '')
        ]
          = react_picker(f, :cover_placement)

        aside.folio-console-smart-col[
          class="folio-console-atom-fields"
          class="folio-console-atom-fields--document"
          hidden=(structure[:document] ? nil : '')
        ]
          = react_picker(f, :document_placement, \
                            file_type: 'Folio::Document')

        .folio-console-smart-col.folio-console-atom-main-fields
          .folio-console-atom-model
            = model_field

          = title_field
          = perex_field
          = content_field

        aside.folio-console-smart-col.folio-console-smart-col--wrap[
          class="folio-console-atom-fields"
          class="folio-console-atom-fields--images"
          hidden=(structure[:images] ? nil : '')
        ]
          = react_picker(f, :image_placements)

        aside.folio-console-smart-col.folio-console-smart-col--wrap[
          class="folio-console-atom-fields"
          class="folio-console-atom-fields--documents"
          hidden=(structure[:documents] ? nil : '')
        ]
          = react_picker(f, :document_placements, \
                            file_type: 'Folio::Document')

  == cell('folio/console/nested_model_controls', f, vertical: true)
