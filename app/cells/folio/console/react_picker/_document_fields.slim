= html_safe_fields_for f, placement_key do |fp|
  - if fp.object.marked_for_destruction?
    = fp.hidden_field :_destroy, value: 1
  - else
    .nested-fields[
      class="folio-console-thumbnail"
      class="folio-console-thumbnail--document"
    ]
      = fp.hidden_field :_destroy, value: 0
      = fp.hidden_field :file_id
      = fp.hidden_field :id

      .folio-console-thumbnail__inner
        i.folio-console-thumbnail__fa-icon class="fa fa-file-o"
        strong.folio-console-thumbnail__title = truncate(fp.object.to_label)

        = fp.hidden_field :title, value: fp.object.to_label, \
                                  'data-file-name' => fp.object.file.file_name

        button[
          type='button'
          class='f-c-file-list__file-btn f-c-file-list__file-btn--edit btn btn-secondary fa fa-edit'
          class='folio-console-react-picker__edit folio-console-react-picker__edit--document'
          data={ file: Folio::Console::FileSerializer.new(fp.object.file).serializable_hash[:data].to_json }
        ]

        button[
          type='button'
          class='f-c-file-list__file-btn f-c-file-list__file-btn--destroy btn btn-danger fa fa-times'
          data-destroy-association=true
        ]
