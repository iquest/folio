class Folio::Console::<%= controller_class_name %>Controller < Folio::Console::BaseController
  folio_console_controller_for '<%= class_name %>'

  def index
    <%- if positionable? -%>
    <%= instance_variable_name(plural: true) %> = @<%= class_name %>.ordered
    <%- end -%>

    @pagy, @<%= instance_variable_name(plural: true) %> = pagy(@<%= instance_variable_name(plural: true) %>)
  end

  def create
    @<%= instance_variable_name %> = <%= class_name %>.create(<%= instance_variable_name %>_params)
    respond_with @<%= instance_variable_name %>
  end

  def update
    @<%= instance_variable_name %>.update(<%= instance_variable_name %>_params)
    respond_with @<%= instance_variable_name %>
  end

  def destroy
    @<%= instance_variable_name %>.destroy
    respond_with @<%= instance_variable_name %>
  end

  private

    def <%= "#{instance_variable_name}_params" %>
      <%- if form_attribute_names.empty? -%>
      params.fetch(:<%= singular_table_name %>, {})
      <%- else -%>
      params.require(:<%= singular_table_name %>)
            .permit(<%= form_attribute_names.map { |name| ":#{name}" }.join(",\n                    ") %>)
      <%- end -%>
    end
end
